/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HRMR: HRMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 12 24 25 1 2 3 4 5 14 15 16 17 26 27 28 29 36 37 38 13 39 40 41>;
            require-prior-idle-ms = <150>;
        };

        HRML: HRML {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 41 39 37 36 38>;
            require-prior-idle-ms = <150>;
        };

        smart_period: smart_period {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_PERIOD";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        smart_comma: smart_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_COMMA";
            bindings = <&kp KP_COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        smart_mark: smart_mark {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_MARK";
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        smart_space: smart_space {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SPACE";
            bindings = <&kp SPACE>, <&kp BACKSPACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bracket_L {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <32 31>;
            timeout-ms = <20>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        bracket_R {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
            timeout-ms = <20>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESCAPE  &kp Q             &kp W          &kp E             &kp R               &kp T             &kp Y         &kp U                &kp I              &kp O                  &kp SQT            &smart_mark
&kp TAB     &HRML LEFT_GUI A  &HRML LCTRL S  &HRML LEFT_ALT D  &HRML LEFT_SHIFT F  &kp G             &kp H         &HRMR RIGHT_SHIFT J  &HRMR RIGHT_ALT K  &HRMR RIGHT_CONTROL L  &HRMR RIGHT_GUI P  &kp BACKSPACE
&kp LCTRL   &kp Z             &kp X          &kp C             &kp V               &kp B             &kp N         &kp M                &smart_comma       &smart_period          &kp UNDERSCORE     &kp ENTER
                                             &none             &none               &kp LEFT_SHIFT    &smart_space  &to 1                &to 4
            >;
        };

        smart_number {
            bindings = <
&none  &none  &none  &none  &none  &none    &kp KP_COMMA     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &none  &none
&none  &none  &none  &none  &none  &none    &kp KP_NUMBER_0  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &none  &none
&none  &none  &none  &none  &none  &none    &kp KP_DOT       &kp KP_NUMBER_1  &kp KP_N2        &kp KP_NUMBER_3  &none  &none
                     &none  &none  &none    &none            &to 0            &none
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_4 {
            bindings = <
&kp ESC    &kp N1   &kp N2  &kp N3  &kp N4    &kp T        &none  &none  &none  &none  &none  &none
&kp TAB    &kp TAB  &kp Q   &kp W   &kp E     &kp R        &none  &none  &none  &none  &none  &none
&kp LCTRL  &none    &kp A   &kp S   &kp D     &kp F        &none  &none  &none  &none  &none  &none
                            &none   &kp LALT  &kp SPACE    &none  &none  &to 0
            >;
        };
    };
};
